name: Databricks Bundle Deploy

on:
  push:
    branches:
      - dev
      - test
      - prod

jobs:
  deploy:
    runs-on: ubuntu-latest
    # This picks the environment based on the branch name
    environment: ${{ github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Databricks bundle target based on branch
        id: set-target
        run: |
          if [[ "${GITHUB_REF##*/}" == "dev" ]]; then
            echo "target=dev" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF##*/}" == "test" ]]; then
            echo "target=test" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF##*/}" == "prod" ]]; then
            echo "target=prod" >> $GITHUB_OUTPUT
          else
            echo "Unknown branch, exiting."
            exit 1
          fi

      - name: Set up Databricks CLI
        uses: databricks/setup-cli@main

      - name: Debug Branch Info
        run: |
          echo "github.ref: ${{ github.ref }}"
          echo "github.ref_name: ${{ github.ref_name }}"
          echo "github.head_ref: ${{ github.head_ref }}"
          echo ${{ steps.set-target.outputs.target }}
          echo ${{ secrets.DATABRICKS_HOST }}

      - name: Validate Bundle
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          databricks bundle validate --target ${{ steps.set-target.outputs.target }}

      - name: Deploy Bundle
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          databricks bundle deploy --target ${{ steps.set-target.outputs.target }}

      # Optional: Run a Databricks workflow after deploy
      - name: Run Databricks workflow
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          databricks bundle run job_hls_genomics --target ${{ steps.set-target.outputs.target }} --refresh-all
